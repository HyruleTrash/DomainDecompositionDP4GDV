@startuml

class RoomManager{
 +Room CurrentRoom
}

class Room{
 +Tile[] Tiles
 +WaveManager WaveManager
}

class Pool<T>{
 +T[] PoolOfObjects
 +GetRandom()
}
note top: <i>List of references to randomly pick from</i>

class "PoolOfRooms"{
 +Pool<Room>
}

abstract Tile
class AnimatedTile{
 +Animator TileAnimator
}
class Wall
class Walkable
class Hazardous{
 +float Damage
}
class Trap{
 +delegate TrapFunction
}
class Interactable

class WellOfCharon{
 +Item[] Stock
 +PoolOfItems ItemPool
}
class TrailOfTheGods{
 +PoolOfTrails TrailPool
}
class PoolOfPurging{
 +PoolOfItems ItemPool
}
class PoolOfItems{
 +Pool<Item>
}
class PoolOfTrails{
 +Pool<Trial>
}

class Trial{
 +int MaxReward
 +int CurrentReward
 T RewardType
}

class Item
class ShopItem{
 +bool purchased
}

class Animator{
 +Sprite[] Sprites
}

class WaveManager{
 +Enemy[] CurrentWave
 +PoolOfEnemys EnemyPool
}
class Enemy
class PoolOfEnemys{
 +Pool<Enemy>
}

class Player
class Boon
class PoolOfBoons{
 +Pool<Boon>
}

AnimatedTile --> Tile
AnimatedTile --* Animator

Wall --> AnimatedTile
Walkable --> AnimatedTile
Hazardous --> AnimatedTile
Trap --> AnimatedTile
Interactable --> AnimatedTile

WellOfCharon --> Interactable
TrailOfTheGods --> Interactable
PoolOfPurging --> Interactable

ShopItem --> Item

PoolOfItems --* Item
WellOfCharon --* PoolOfItems
WellOfCharon --* ShopItem
PoolOfPurging --* PoolOfItems

PoolOfTrails --* Trial
TrailOfTheGods --* PoolOfTrails

RoomManager --* PoolOfRooms
RoomManager --* Player
RoomManager --* Room
PoolOfRooms --* Room

Room --* WaveManager

WaveManager --* Enemy
WaveManager --* PoolOfEnemys
PoolOfEnemys --* Enemy

Enemy --* Animator
Player --* Animator

Player --* Item
Player --* Boon
Player --* PoolOfBoons
PoolOfBoons --* Boon

Room --* Tile
@enduml